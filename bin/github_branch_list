#! /usr/bin/ruby 

require 'optparse'
require 'yaml'

options = {}
OptionParser.new do |opts|
opts.banner = "Usage: github_branch_list [options]"

opts.on("-d", "--to-delete", "Only display branches to delete") do |v|
  options[:to_delete] = 1
end

opts.on("-D", "--to-delete-with-proposal", "Display branches to delete and propose to remove them one by one") do |v|
  options[:to_delete_with_proposal] = 1
end

opts.on("-L", "--just-local", "Only treat local branches") do |v|
  options[:just_local_branches] = 1
end

opts.on("-R", "--just-remote", "Only treat remote branches") do |v|
  options[:just_remote_branches] = 1
end

opts.on("-v", "--version", "Version") do |v|
  options[:version] = 1
end

end.parse!

unless options.include?(:just_local_branches) || options.include?(:just_remote_branches)
  options[:just_local_branches] = true
  options[:just_remote_branches] = true
end

#p options
#p ARGV

if options.include? :version
  puts "0.6.1"
  exit
end

def remote_branches remotes=false
  branches = []
  if remotes
    output = `git branch -r`
  else
    output = `git branch`
  end
  output.each_line do |line|
    unless line =~ /HEAD/
      branches << line.strip.gsub(/\* /,"")
    end
  end
  branches.delete_at(0)
  branches
end

def diff_branches br1, br2, options

  name1 = br1.gsub /origin\//, ""
  name2 = br2.gsub /origin\//, ""


  return if name1 == name2

  ahead = `git rev-list #{br1}..#{br2} | wc -l`.strip
  behind = `git rev-list #{br2}..#{br1} | wc -l`.strip

  display = true
  if (options.include?(:to_delete) || options.include?(:to_delete_with_proposal)) && (ahead.to_i != 0)
    display = false 
  end

  if display == true
    puts 
    puts "#{name2} from #{name1} is #{ahead} ahead "
    puts "#{name2} from #{name1} is #{behind} behind "
    if options.include?(:to_delete_with_proposal)
      puts "Do you want to delete the remote branch #{name2}? [y/N]"
      r = STDIN.gets
      if r.strip == "y"
        if options[:just_remote_branches]
          `git push origin :#{name2}`
        else 
          `git br -D #{name2}`
        end
      end
    end
    
  end

end

def diff_all_branhces_with_master options

  if options[:just_remote_branches]
    `git fetch origin`
    title_block "REMOTE BRANCHES"
    branches = remote_branches(true)
    branches.each do |br|
      diff_branches "origin/master", br, options
    end
  end

  if options[:just_local_branches]
    `git fetch origin`
    options[:remote] = false
    title_block "LOCAL BRANCHES"
    branches = remote_branches(false)
    branches.each do |br|
      diff_branches "origin/master", br, options
    end
  end

end

def title_block text=""
  puts
  puts "========================================"
  puts text
  puts "========================================"
end

diff_all_branhces_with_master options
